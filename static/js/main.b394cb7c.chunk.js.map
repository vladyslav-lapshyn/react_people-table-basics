{"version":3,"sources":["pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api/api.ts","components/PersonLink/PersonLink.tsx","components/TableRow/TableRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","helpers.ts","pages/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","person","cn","sex","to","slug","name","TableRow","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","catch","finally","processedPeople","find","getProcessPeople","showNoPeopleMessage","length","showPeopleTable","showPeopleLoadingError","HomePage","PageNavLink","text","isActive","Navigation","role","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b394cb7c.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n    to={person.slug}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\nexport interface Props {\n  person: Person;\n}\n\nexport const TableRow: FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother ? (\n          <PersonLink person={person.mother} />\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {person.father ? (\n          <PersonLink person={person.father} />\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { TableRow } from '../TableRow';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <TableRow key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api/api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getProcessPeople } from '../helpers';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const processedPeople = getProcessPeople(people);\n\n  const showNoPeopleMessage = !people.length && !isError && !isLoading;\n  const showPeopleTable = people.length > 0 && !isError && !isLoading;\n  const showPeopleLoadingError = !people.length && isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {showPeopleLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {showNoPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {showPeopleTable && (\n            <PeopleTable people={processedPeople} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from './types';\n\nconst getFather = (\n  fatherName: string | null,\n  array: Person[],\n): Person | undefined => {\n  return array.find(father => father.name === fatherName);\n};\n\nconst getMother = (\n  motherName: string | null,\n  array: Person[],\n): Person | undefined => {\n  return array.find(mother => mother.name === motherName);\n};\n\nexport const getProcessPeople = (people: Person[]): Person[] => {\n  return people.map(person => {\n    const father = getFather(person.fatherName, people);\n    const mother = getMother(person.motherName, people);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { NavLink, To } from 'react-router-dom';\n\ninterface Props {\n  to: To;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\">\n            <Route index element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}